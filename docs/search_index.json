[["index.html", "Data Wrangling with R Syllabus Learning Objectives Material Class Structure Schedule Conventions used in this book Feedback", " Data Wrangling with R Bradley Boehmke Syllabus This repository contains additional resources for the UC BANA 7025 Data Wrangling course. The following is a truncated syllabus; for the full syllabus along with complete course content please visit the online course content in Canvas. Welcome to Data Wrangling with R! This course provides an intensive, hands-on introduction to Data Wrangling with the R programming language. You will learn the fundamental skills required to acquire, munge, transform, manipulate, and visualize data in a computing environment that fosters reproducibility. Data wrangling, which is also commonly referred to as data munging, transformation, manipulation, janitor work, etc. can be a painstakingly laborious process. In fact, it has been stated that up to 80% of data analysis is spent on the process of cleaning and preparing data (Wickham 2014; Dasu and Johnson 2003). However, being a prerequisite to the rest of the data analysis workflow (visualization, modeling, reporting), it’s essential that you become fluent and efficient in data wrangling techniques. Learning Objectives This course will guide you through the data wrangling process along with give you a solid foundation of the basics of working with data in R. My goal is to teach you how to easily wrangle your data so you can spend more time focused on understanding the content of your data via visualization, modeling, and reporting your results. Upon successfully completing this course, you will be able to: Perform your data analysis in a literate programming environment Manage different types of data Manage different data structures Import and export data Index, subset, reshape and transform your data Compute descriptive statistics Visualize data Make your code efficient by using control statements &amp; iteration Write your own functions …all with R! This course assumes no prior knowledge of R. Experience with programming concepts or another programming language will help, but is not required to understand the material. Material The bulk of the classroom material will be provided via this book, the recorded lectures, and class notes. In some cases there are additional recommended readings, all of which are readily available online. Class Structure Modules: For this class each module is covered over the course of week. In the “Overview” section for each module you will find overall learning objectives, a short description of the learning content covered in that module, along with all tasks that are required of you for that module (i.e. quizzes, lab). Each module will have two primary lessons and associated quizzes along with a lab. Lessons: For each lesson you will read and work through the tutorial. Short videos will be sprinkled throughout the lesson to further discuss and reinforce lesson concepts. Each lesson will have various “Your Turn” exercises throughout, along with end-of-lesson exercises. I highly recommend you work through these exercises as they will prepare you for the quizzes, labs, and project work. Quizzes: There will be a short quiz associated with each lesson. These quizzes will be hosted in the course website on Canvas. Please check Canvas for due dates for these quizzes. Labs: There will be a lab associated with each module. For these labs students will be guided through a case study step-by-step. The aim is to provide a detailed view on how to manage a variety of complex real-world data; how to convert real problems into data wrangling and analysis problems; and to apply R to address these problems and extract insights from the data. Submission of these labs will be done through the course website on Canvas. Please check Canvas for due dates for these labs. Project: TBD Schedule See the Canvas course webpage for a detailed schedule with due dates for quizzes, labs, etc. Module Description 1 Introduction Intro to data wrangling, R, and this course R fundamentals &amp; the Rstudio IDE 2 Reproducible Documents and Importing Data Managing your workflow and reproducibility Importing data and understanding the basics of it 3 Tidy Data and Data Manipulation Tidying &amp; preparing data for analysis Data manipulation 4 Relational Data and More Tidyverse Packages Relational data Leveraging the Tidyverse to simplify data wrangling 5 Data Visualization &amp; Exploration Data visualization Exploratory data analysis 6 Creating Efficient Code in R Control statements &amp; iteration Writing functions 7 Introduction to Applied Modeling Correlation &amp; pattern discovery Introduction to machine learning Conventions used in this book The following typographical conventions are used in this book: strong italic: indicates new terms, bold: indicates package &amp; file names, inline code: monospaced highlighted text indicates functions or other commands that could be typed literally by the user, code chunk: indicates commands or other text that could be typed literally by the user 1 + 2 ## [1] 3 In addition to the general text used throughout, you will notice the following code chunks with images: Signifies a tip or suggestion Signifies a general note Signifies a warning or caution Feedback To report errors or bugs that you find in this course material please post an issue at https://github.com/bradleyboehmke/uc-bana-7025/issues. For all other communication be sure to use Canvas or the university email. When communicating with me via email, please always include BANA7025 in the subject line. References "],["overview.html", "1 Overview 1.1 Learning objectives 1.2 Tasks 1.3 Course readings", " 1 Overview Welcome to module 1! The focus of this module is to get you acquainted with the concept of data wrangling, the R programming language, and to get you performing some foundational programming tasks with R. 1.1 Learning objectives By the end of this module you should be able to: Explain the key components of data wrangling. Discuss the background and benefits of the R programming language. Understand how to install, open, and start using R with the RStudio IDE. Perform fundamental tasks in R such as assignment, evaluation, using R as a calculator, and installing packages. 1.2 Tasks TBD 1.3 Course readings TBD "],["lesson-1.html", "2 Lesson 1 2.1 Learning objectives 2.2 Content A 2.3 Content B 2.4 Exercises", " 2 Lesson 1 TBD 2.1 Learning objectives 2.2 Content A 2.3 Content B 2.4 Exercises "],["lesson-2.html", "3 Lesson 2 3.1 Learning objectives 3.2 Content A 3.3 Content B 3.4 Exercises", " 3 Lesson 2 TBD 3.1 Learning objectives 3.2 Content A 3.3 Content B 3.4 Exercises "],["lab.html", "4 Lab", " 4 Lab TBD "],["overview-1.html", "5 Overview 5.1 Learning objectives 5.2 Tasks 5.3 Course readings", " 5 Overview Welcome to module 2! This module will focus on … 5.1 Learning objectives By the end of this module you should be able to: Use RStudio Projects to organize a data wrangling project. Understand how to use R scripts, R Markdown, and R Notebook documents to make your data wrangling projects and outputs reproducible. Import data from a variety of sources and perform basic tasks to understand simple attributes about your imported dataset. Describe key differences between different data structures. 5.2 Tasks TBD 5.3 Course readings TBD "],["lesson-1-1.html", "6 Lesson 1 6.1 Learning objectives 6.2 Content A 6.3 Content B 6.4 Exercises", " 6 Lesson 1 TBD 6.1 Learning objectives 6.2 Content A 6.3 Content B 6.4 Exercises "],["lesson-2-1.html", "7 Lesson 2 7.1 Learning objectives 7.2 Content A 7.3 Content B 7.4 Exercises", " 7 Lesson 2 TBD 7.1 Learning objectives 7.2 Content A 7.3 Content B 7.4 Exercises "],["lab-1.html", "8 Lab", " 8 Lab TBD "],["overview-2.html", "9 Overview 9.1 Learning objectives 9.2 Tasks 9.3 Course readings", " 9 Overview In the last module we discussed general guidelines for first interacting with a new data set. In module 3 we want to build on those activities by learning how to clean and tidy our data, and then beginning our journey to creating insights with data through data manipulation. 9.1 Learning objectives By the end of this module you should be able to: Explain the basic concepts of “tidy” data. Perform data tidying tasks with R such as reshaping, splitting, and combining data along with handling missing values. Manipulate your data by applying filters, selecting and renaming columns, creating new variables, and more. Compute descriptive statistics across all observations and within different grouped levels of observations. 9.2 Tasks 9.3 Course readings "],["lesson-1-2.html", "10 Lesson 1 10.1 Learning objectives 10.2 Content A 10.3 Content B 10.4 Exercises", " 10 Lesson 1 TBD 10.1 Learning objectives 10.2 Content A 10.3 Content B 10.4 Exercises "],["lesson-2-2.html", "11 Lesson 2 11.1 Learning objectives 11.2 Content A 11.3 Content B 11.4 Exercises", " 11 Lesson 2 TBD 11.1 Learning objectives 11.2 Content A 11.3 Content B 11.4 Exercises "],["lab-2.html", "12 Lab", " 12 Lab TBD "],["overview-3.html", "13 Overview 13.1 Learning objectives 13.2 Tasks 13.3 Course readings", " 13 Overview It’s rare that a data analysis involves only a single table of data. Typically you have many tables of data, and you must combine them to answer the questions that you’re interested in. Collectively, multiple tables of data are called relational data because it is the relations, not just the individual datasets, that are important. Moreover, as data scientists work across multiple datasets they often find themselves working with different data types (i.e. numeric, categorical, date-times) and this can present many challenges. In this module we’ll explore how to use different join operations when working with relational data along with introduce additional Tidyverse packages that will simplify working with different data types. 13.1 Learning objectives By the end of this module you should be able to: Describe and apply the different join operations. Identify and manipulate a variety of different data types. 13.2 Tasks 13.3 Course readings "],["lesson-1-3.html", "14 Lesson 1 14.1 Learning objectives 14.2 Content A 14.3 Content B 14.4 Exercises", " 14 Lesson 1 TBD 14.1 Learning objectives 14.2 Content A 14.3 Content B 14.4 Exercises "],["lesson-2-3.html", "15 Lesson 2 15.1 Learning objectives 15.2 Content A 15.3 Content B 15.4 Exercises", " 15 Lesson 2 TBD 15.1 Learning objectives 15.2 Content A 15.3 Content B 15.4 Exercises "],["lab-3.html", "16 Lab", " 16 Lab TBD "],["overview-4.html", "17 Overview 17.1 Learning objectives 17.2 Tasks 17.3 Course readings", " 17 Overview Being able to create visualizations (graphical representations) of data is a key step in data analysis. In this module you will learn to use the ggplot2 library to create the meaningful, elegant, and finely tuned data visualizations. You will also learn to combine data transformation, manipulation, and visualization to explore your data and start extracting key insights. 17.1 Learning objectives By the end of this module you should be able to: Build meaning visualizations with ggplot2. Identify which plots to use to explore different types of variables. Combine descriptive statistics and visualization to identify summaries, relationships, differences, and abnormalities in the data. 17.2 Tasks 17.3 Course readings "],["lesson-1-4.html", "18 Lesson 1 18.1 Learning objectives 18.2 Content A 18.3 Content B 18.4 Exercises", " 18 Lesson 1 TBD 18.1 Learning objectives 18.2 Content A 18.3 Content B 18.4 Exercises "],["lesson-2-4.html", "19 Lesson 2 19.1 Learning objectives 19.2 Content A 19.3 Content B 19.4 Exercises", " 19 Lesson 2 TBD 19.1 Learning objectives 19.2 Content A 19.3 Content B 19.4 Exercises "],["lab-4.html", "20 Lab", " 20 Lab TBD "],["overview-5.html", "21 Overview 21.1 Learning objectives 21.2 Tasks 21.3 Course readings", " 21 Overview Don’t repeat yourself (DRY) is a software development principle aimed at reducing repetition. Formulated by Andy Hunt and Dave Thomas in their book The Pragmatic Programmer, the DRY principle states that “every piece of knowledge must have a single, unambiguous, authoritative representation within a system.” This principle has been widely adopted to imply that you should not duplicate code. Although the principle was meant to be far grander than that, there’s plenty of merit behind this slight misinterpretation. Removing duplication is an important part of writing efficient code and reducing potential errors. First, reduced duplication of code can improve computing time and reduces the amount of code writing required. Second, less duplication results in less creating and saving of unnecessary objects. Inefficient code invariably creates copies of objects you have little interest in other than to feed into some future line of code; this wrecks havoc on properly managing your objects as it basically results in a global environment charlie foxtrot! Less duplication also results in less editing. When changes to code are required, duplicated code becomes tedious to edit and invariably mistakes or fat-fingering occur in the cut-and-paste editing process which just lengthens the editing that much more. Thus, minimizing duplication by writing efficient code is important to becoming a data analyst and in this module you learn to improve your code efficiency with control flow, iteration, and functions. 21.1 Learning objectives By the end of this module you should be able to: Use a variety of control statements to control the flow of code evaluation. Simplify repetitive code with R’s looping statements. Understand when and how to write a function. 21.2 Tasks 21.3 Course readings "],["lesson-1-5.html", "22 Lesson 1 22.1 Learning objectives 22.2 Content A 22.3 Content B 22.4 Exercises", " 22 Lesson 1 TBD 22.1 Learning objectives 22.2 Content A 22.3 Content B 22.4 Exercises "],["lesson-2-5.html", "23 Lesson 2 23.1 Learning objectives 23.2 Content A 23.3 Content B 23.4 Exercises", " 23 Lesson 2 TBD 23.1 Learning objectives 23.2 Content A 23.3 Content B 23.4 Exercises "],["lab-5.html", "24 Lab", " 24 Lab TBD "],["overview-6.html", "25 Overview 25.1 Learning objectives 25.2 Tasks 25.3 Course readings", " 25 Overview TBD 25.1 Learning objectives 25.2 Tasks 25.3 Course readings "],["lesson-1-6.html", "26 Lesson 1 26.1 Learning objectives 26.2 Content A 26.3 Content B 26.4 Exercises", " 26 Lesson 1 TBD 26.1 Learning objectives 26.2 Content A 26.3 Content B 26.4 Exercises "],["lesson-2-6.html", "27 Lesson 2 27.1 Learning objectives 27.2 Content A 27.3 Content B 27.4 Exercises", " 27 Lesson 2 TBD 27.1 Learning objectives 27.2 Content A 27.3 Content B 27.4 Exercises "],["lab-6.html", "28 Lab", " 28 Lab TBD "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
